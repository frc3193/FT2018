// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ElevatorDefault.h"
#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ElevatorDefault::ElevatorDefault(): frc::Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::elevator.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ElevatorDefault::Initialize() {
	Robot::elevator->lift->Set(0.0);
}

// Called repeatedly when this Command is scheduled to run
void ElevatorDefault::Execute() {
	if (Robot::oi->getfightStick()->GetRawAxis(Robot::oi->FIGHTSTICK_LEFT_Y) != 0.0) {
		if (Robot::oi->getfightStick()->GetRawAxis(Robot::oi->FIGHTSTICK_LEFT_Y) == -1.0 && Robot::elevator->switchTop->Get()) {
			Robot::elevator->lift->Set(Robot::oi->getfightStick()->GetRawAxis(Robot::oi->FIGHTSTICK_LEFT_Y));
		}
		else if (Robot::elevator->switchBottom->Get()) {
			Robot::elevator->lift->Set(Robot::oi->getfightStick()->GetRawAxis(Robot::oi->FIGHTSTICK_LEFT_Y));
		}
	}
	else {
		Robot::elevator->lift->Set(0.0);
	}
}

// Make this return true when this Command no longer needs to run execute()
bool ElevatorDefault::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void ElevatorDefault::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ElevatorDefault::Interrupted() {

}
